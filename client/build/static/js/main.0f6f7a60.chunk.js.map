{"version":3,"sources":["assets/logo.png","helpers/ViewPassword.js","components/Login/LoginForm.js","containers/Login.js","components/Register/RegisterForm.js","containers/Register.js","containers/Home.js","helpers/isAuthenticated.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ViewPassword","props","changeEye","e","preventDefault","state","secured","setState","enterPressed","key","login","className","htmlFor","type","this","placeholder","id","name","onChange","handleChange","onKeyPress","required","onClick","Component","LoginForm","handleInputChange","target","value","email","password","axios","post","then","res","data","token","catch","err","toast","error","response","msg","src","Logo","alt","to","Login","wrapper","React","createRef","ref","RegisterForm","register","full_name","contact_number","success","Register","Home","logout","isAuthenticated","localStorage","getItem","PrivateRoute","component","path","rest","render","App","setItem","removeItem","exact","userID","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.0f6f7a60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2d0f120e.png\";","import React, { Component } from \"react\";\n\nexport default class ViewPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      secured: true\n    };\n  }\n  changeEye = e => {\n    e.preventDefault();\n\n    if (this.state.secured) {\n      this.setState({ secured: false });\n    } else {\n      this.setState({ secured: true });\n    }\n  };\n\n  enterPressed = e => { \n    if(e.key === 'Enter'){\n      this.props.login(e)\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"password-container\">\n          <label htmlFor=\"password\">\n            <i className=\"fas fa-key\"></i>\n          </label>\n          <input\n            type={this.state.secured ? \"password\" : \"text\"}\n            placeholder=\"Password\"\n            id=\"passwordInput\"\n            name=\"password\"\n            className=\"fields\"\n            onChange={this.props.handleChange}\n            onKeyPress={this.enterPressed}\n            required\n          />\n          <button onClick={this.changeEye}>\n            <i\n              id=\"eyeContainer\"\n              className={this.state.secured ? \"fas fa-eye-slash\" : \"far fa-eye\"}\n            ></i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../../assets/logo.png\";\n\n// packages\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\n\n// helper\nimport ViewPassword from \"../../helpers/ViewPassword\";\n\nexport default class LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  login = e => {\n    e.preventDefault();\n\n    const {email, password} = this.state;\n\n    axios.post(\"http://localhost:8080/api/admin/authentication/auth-admin\", {email, password}).then(res => {\n      this.props.login(res.data.token);\n    }).catch(err => {\n      toast.error(err.response.data.msg)\n    })\n  }\n  render() {\n    return (\n      <main className=\"mx-auto\">\n        <img src={Logo} alt=\"Nagarjuna College of IT Logo\" />\n        <form>\n          <label htmlFor=\"email\">\n            <i className=\"far fa-user-circle\"></i>\n          </label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            onChange={this.handleInputChange}\n            placeholder=\"Email\"\n            className=\"fields\"\n            required\n          />\n          <br />\n          <ViewPassword login={this.login} handleChange={this.handleInputChange} />\n          <Link to=\"\" className=\" forgot\">\n            Forgot Password?\n          </Link>\n          <button\n            type=\"submit\"\n            className=\"submit\"\n            onClick={this.login}\n          >\n            Login\n          </button>\n        </form>\n      </main>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// package*s\nimport { ToastContainer } from 'react-toastify';\n\n//components\nimport LoginForm from \"../components/Login/LoginForm\";\n\n// custom sass\nimport \"../components/Login/style.css\";\n\nexport default class Login extends Component {\n  componentDidMount(){\n    this.wrapper = React.createRef();\n  }\n\n  login = (token) => {\n    this.props.login(token)\n  }\n  render() {\n    return (\n      <div className=\"container\" ref={this.wrapper}>\n      <ToastContainer/>\n        {/* <!-- header starts --> */}\n        <header>\n          <Link to=\"/\" className=\"backPage\">\n            <i className=\"fas fa-arrow-left\"></i> Back to page\n          </Link>\n        </header>\n        {/* <!-- header ends --> */}\n\n        {/* main starts */}\n        <LoginForm login={this.login}/>\n        {/* main ends */}\n\n        {/* footer starts */}\n        <footer>\n        <div className=\"row\">\n            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12\">\n                &copy; Nagarjuna College of IT. All Rights Reserved\n            </div>\n            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 text-xl-right text-lg-right text-md-right\">\n                <ul>\n                    <li><Link to=\"\">About</Link></li>\n                    <li><Link to=\"\">Contact</Link></li>\n                </ul>\n            </div>\n        </div>\n    </footer>\n        {/* footer ends */}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Logo from \"../../assets/logo.png\";\n\n// packages\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nexport default class RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      full_name: \"\",\n      email: \"\",\n      password: \"\",\n      contact_number: \"\",\n    };\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  register = (e) => {\n    e.preventDefault();\n\n    const { email, password, full_name, contact_number } = this.state;\n\n    axios\n      .post(\"http://localhost:8080/api/admin/accounts/new-admin\", {\n        email,\n        password,\n        full_name,\n        contact_number\n      })\n      .then((res) => {\n        toast.success(res.data.msg)\n      })\n      .catch((err) => {\n        toast.error(err.response.data.msg);\n      });\n  };\n  render() {\n    return (\n      <main className=\"mx-auto\">\n        <img src={Logo} alt=\"Nagarjuna College of IT Logo\" />\n        <form>\n          <input\n            type=\"text\"\n            name=\"full_name\"\n            onChange={this.handleInputChange}\n            placeholder=\"Full Name\"\n            className=\"fields\"\n            required\n          />\n          <br />\n          <input\n            type=\"text\"\n            name=\"email\"\n            onChange={this.handleInputChange}\n            placeholder=\"Email\"\n            className=\"fields\"\n            required\n          />\n          <br />\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={this.handleInputChange}\n            placeholder=\"Password\"\n            className=\"fields\"\n            required\n          /><br/>\n          <input\n            type=\"text\"\n            name=\"contact_number\"\n            onChange={this.handleInputChange}\n            placeholder=\"Contact Number\"\n            className=\"fields\"\n            required\n          />\n          <button type=\"submit\" className=\"submit\" onClick={this.register}>\n            Register\n          </button>\n        </form>\n      </main>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {Link} from 'react-router-dom'\n\n// package*s\nimport { ToastContainer } from \"react-toastify\";\n\n// components\nimport RegisterForm from \"../components/Register/RegisterForm\"\n\nimport \"../components/Register/style.css\";\n\nexport default class Register extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n      <ToastContainer/>\n        {/* <!-- header starts --> */}\n        <header>\n          <Link to=\"/\" className=\"backPage\">\n            <i className=\"fas fa-arrow-left\"></i> Back to page\n          </Link>\n        </header>\n        {/* <!-- header ends --> */}\n\n        {/* mains starts */}\n        <RegisterForm/>\n        {/* main ends */}\n\n        {/* footer starts */}\n        <footer>\n        <div className=\"row\">\n            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12\">\n                &copy; Nagarjuna College of IT. All Rights Reserved\n            </div>\n            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 text-xl-right text-lg-right text-md-right\">\n                <ul>\n                    <li><Link to=\"\">About</Link></li>\n                    <li><Link to=\"\">Contact</Link></li>\n                </ul>\n            </div>\n        </div>\n    </footer>\n        {/* footer ends */}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                Welcome to home!\n                <button onClick={this.props.logout}>logout</button>\n            </div>\n        )\n    }\n}\n","const isAuthenticated = () => {\n  let isAuthenticated = localStorage.getItem(\"access-token\");\n\n  return isAuthenticated ? true : false;\n};\n\nexport default isAuthenticated;","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\n// bootstrap\nimport \"jquery/dist/jquery.slim\";\nimport \"popper.js\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min\";\n\n// fontawesome package\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n// containers\nimport Login from \"./containers/Login\";\nimport Register from \"./containers/Register\";\nimport Home from \"./containers/Home\";\n\nimport isAuthenticated from \"./helpers/isAuthenticated\";\n\nfunction PrivateRoute({ component: Component, path, ...rest }) {\n  return (\n    <Route\n      path={path}\n      render={(props) =>\n        isAuthenticated() ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n}\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isAuthenticated: isAuthenticated(),\n    };\n  }\n\n  login = (token) => {\n    localStorage.setItem(\"access-token\", token);\n    this.setState({\n      isAuthenticated: true,\n    });\n  };\n\n  logout = () => {\n    localStorage.removeItem(\"access-token\");\n\n    this.setState({isAuthenticated: false})\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(props) =>\n              this.state.isAuthenticated ? (\n                <Redirect to=\"/home\" userID={this.state.userID} />\n              ) : (\n                <Login login={this.login} />\n              )\n            }\n          />\n          <PrivateRoute path=\"/register-admin\"\n          component={Register}/>\n          <PrivateRoute\n            path=\"/home\"\n            component={Home}\n            logout={this.logout}\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}